{"ast":null,"code":"// 应用配置\nconst config={// API 配置\napi:{baseURL:'http://localhost:18188',adminPath:'/star',timeout:10000},// 应用配置\napp:{title:'Star Share',description:'AI模型服务平台',version:'1.0.0',environment:process.env.NODE_ENV||'development'},// 路由配置\nroutes:{home:'/',admin:'/admin',adminLogin:'/admin/login'},// 存储配置\nstorage:{tokenKey:'admin_token',userKey:'admin_user'},// 业务配置\nbusiness:{// 轮播图自动播放间隔 (毫秒)\ncarouselInterval:3000,// 分页默认大小\npageSize:10,// 上传文件最大大小 (MB)\nmaxFileSize:10},// 外部链接配置\nlinks:{openPlatform:'https://api.niceaigc.com/',chatService:'https://share.niceaigc.com/',plusService:'https://goplus.niceaigc.com/',apiDocumentation:'https://api.niceaigc.com/'},// 开发配置\ndevelopment:{enableMockAPI:false,enableDebugMode:true,logLevel:'info'}};// 导出配置\nexport default config;// 导出特定配置模块\nexport const{api,app,routes,storage,business,links,development}=config;// 辅助函数：获取完整的API URL\nexport const getApiUrl=path=>{const baseUrl=api.baseURL.endsWith('/')?api.baseURL.slice(0,-1):api.baseURL;const cleanPath=path.startsWith('/')?path:`/${path}`;return`${baseUrl}${cleanPath}`;};// 辅助函数：获取完整的管理员API URL\nexport const getAdminApiUrl=path=>{const baseUrl=api.baseURL.endsWith('/')?api.baseURL.slice(0,-1):api.baseURL;const adminPath=api.adminPath.startsWith('/')?api.adminPath:`/${api.adminPath}`;const cleanPath=path.startsWith('/')?path:`/${path}`;return`${baseUrl}${adminPath}${cleanPath}`;};// 辅助函数：判断是否为开发环境\nexport const isDevelopment=()=>{return app.environment==='development';};// 辅助函数：判断是否为生产环境\nexport const isProduction=()=>{return app.environment==='production';};// 辅助函数：获取存储的token\nexport const getStoredToken=()=>{return localStorage.getItem(storage.tokenKey);};// 辅助函数：设置存储的token\nexport const setStoredToken=token=>{localStorage.setItem(storage.tokenKey,token);};// 辅助函数：清除存储的token\nexport const clearStoredToken=()=>{localStorage.removeItem(storage.tokenKey);localStorage.removeItem(storage.userKey);};// 辅助函数：检查是否已登录\nexport const isAuthenticated=()=>{return!!getStoredToken();};","map":{"version":3,"names":["config","api","baseURL","adminPath","timeout","app","title","description","version","environment","process","env","NODE_ENV","routes","home","admin","adminLogin","storage","tokenKey","userKey","business","carouselInterval","pageSize","maxFileSize","links","openPlatform","chatService","plusService","apiDocumentation","development","enableMockAPI","enableDebugMode","logLevel","getApiUrl","path","baseUrl","endsWith","slice","cleanPath","startsWith","getAdminApiUrl","isDevelopment","isProduction","getStoredToken","localStorage","getItem","setStoredToken","token","setItem","clearStoredToken","removeItem","isAuthenticated"],"sources":["/opt/dev/star_share/web/src/config/index.ts"],"sourcesContent":["// 应用配置\nconst config = {\n  // API 配置\n  api: {\n    baseURL: 'http://localhost:18188',\n    adminPath: '/star',\n    timeout: 10000,\n  },\n\n  // 应用配置\n  app: {\n    title: 'Star Share',\n    description: 'AI模型服务平台',\n    version: '1.0.0',\n    environment: process.env.NODE_ENV || 'development',\n  },\n\n  // 路由配置\n  routes: {\n    home: '/',\n    admin: '/admin',\n    adminLogin: '/admin/login',\n  },\n\n  // 存储配置\n  storage: {\n    tokenKey: 'admin_token',\n    userKey: 'admin_user',\n  },\n\n  // 业务配置\n  business: {\n    // 轮播图自动播放间隔 (毫秒)\n    carouselInterval: 3000,\n    // 分页默认大小\n    pageSize: 10,\n    // 上传文件最大大小 (MB)\n    maxFileSize: 10,\n  },\n\n  // 外部链接配置\n  links: {\n    openPlatform: 'https://api.niceaigc.com/',\n    chatService: 'https://share.niceaigc.com/',\n    plusService: 'https://goplus.niceaigc.com/',\n    apiDocumentation: 'https://api.niceaigc.com/',\n  },\n\n  // 开发配置\n  development: {\n    enableMockAPI: false,\n    enableDebugMode: true,\n    logLevel: 'info',\n  },\n};\n\n// 导出配置\nexport default config;\n\n// 导出特定配置模块\nexport const { api, app, routes, storage, business, links, development } = config;\n\n// 辅助函数：获取完整的API URL\nexport const getApiUrl = (path: string): string => {\n  const baseUrl = api.baseURL.endsWith('/') ? api.baseURL.slice(0, -1) : api.baseURL;\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\n  return `${baseUrl}${cleanPath}`;\n};\n\n// 辅助函数：获取完整的管理员API URL\nexport const getAdminApiUrl = (path: string): string => {\n  const baseUrl = api.baseURL.endsWith('/') ? api.baseURL.slice(0, -1) : api.baseURL;\n  const adminPath = api.adminPath.startsWith('/') ? api.adminPath : `/${api.adminPath}`;\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\n  return `${baseUrl}${adminPath}${cleanPath}`;\n};\n\n// 辅助函数：判断是否为开发环境\nexport const isDevelopment = (): boolean => {\n  return app.environment === 'development';\n};\n\n// 辅助函数：判断是否为生产环境\nexport const isProduction = (): boolean => {\n  return app.environment === 'production';\n};\n\n// 辅助函数：获取存储的token\nexport const getStoredToken = (): string | null => {\n  return localStorage.getItem(storage.tokenKey);\n};\n\n// 辅助函数：设置存储的token\nexport const setStoredToken = (token: string): void => {\n  localStorage.setItem(storage.tokenKey, token);\n};\n\n// 辅助函数：清除存储的token\nexport const clearStoredToken = (): void => {\n  localStorage.removeItem(storage.tokenKey);\n  localStorage.removeItem(storage.userKey);\n};\n\n// 辅助函数：检查是否已登录\nexport const isAuthenticated = (): boolean => {\n  return !!getStoredToken();\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
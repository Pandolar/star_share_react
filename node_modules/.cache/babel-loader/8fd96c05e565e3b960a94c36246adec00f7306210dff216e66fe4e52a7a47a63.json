{"ast":null,"code":"import config from'../config';// 请求响应类型定义\n// 请求配置接口\n// 从cookies中获取指定名称的值\nconst getCookie=name=>{const value=`; ${document.cookie}`;const parts=value.split(`; ${name}=`);if(parts.length===2){var _parts$pop;return((_parts$pop=parts.pop())===null||_parts$pop===void 0?void 0:_parts$pop.split(';').shift())||null;}return null;};// 获取用户认证信息\nconst getUserAuthHeaders=()=>{const xuserid=getCookie('xuserid');const xtoken=getCookie('xtoken');const headers={};if(xuserid){headers['xuserid']=xuserid;}if(xtoken){headers['xtoken']=xtoken;}return headers;};// 创建用户端请求函数\nasync function createUserRequest(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const{timeout=config.api.timeout,...fetchOptions}=options;// 准备请求头\nconst headers={'Content-Type':'application/json',...getUserAuthHeaders(),// 添加用户认证头\n...(fetchOptions.headers||{})};// 创建超时控制\nconst controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),timeout);try{const response=await fetch(url,{...fetchOptions,headers,signal:controller.signal});clearTimeout(timeoutId);// 处理HTTP错误\nif(!response.ok){throw new Error(`HTTP Error: ${response.status}`);}// 解析响应数据\nconst data=await response.json();return data;}catch(error){clearTimeout(timeoutId);if(error instanceof Error){if(error.name==='AbortError'){throw new Error('请求超时');}throw error;}throw new Error('网络错误');}}// 获取用户端API URL\nconst getUserApiUrl=path=>{const baseUrl=config.api.baseURL.endsWith('/')?config.api.baseURL.slice(0,-1):config.api.baseURL;const cleanPath=path.startsWith('/')?path:`/${path}`;return`${baseUrl}${cleanPath}`;};// 用户认证管理\nexport const userAuthApi={// 检查是否已登录\nisAuthenticated:()=>{const xuserid=getCookie('xuserid');const xtoken=getCookie('xtoken');return!!(xuserid&&xtoken);}};// 公告API\nexport const announcementApi={// 获取公告信息\ngetPublicInfo:async()=>{return createUserRequest(getUserApiUrl('/u/get_public_info'),{method:'GET'});}};// 用户信息API\nexport const userInfoApi={// 获取用户信息\ngetUserInfo:async()=>{return createUserRequest(getUserApiUrl('/u/get_user_info'),{method:'GET'});}};// 套餐API\nexport const packageUserApi={// 获取套餐列表\ngetPackages:async()=>{return createUserRequest(getUserApiUrl('/u/package'),{method:'GET'});}};// 订单API\nexport const orderUserApi={// 创建订单\ncreateOrder:async package_id=>{return createUserRequest(getUserApiUrl('/u/pay_order'),{method:'POST',body:JSON.stringify({package_id})});},// 获取订单列表\ngetOrders:async()=>{return createUserRequest(getUserApiUrl('/u/pay_order'),{method:'GET'});},// 查询订单支付状态\ngetPayStatus:async order_id=>{return createUserRequest(getUserApiUrl(`/u/get_pay_status?order_id=${order_id}`),{method:'GET'});}};// 导出所有用户端API\nexport default{auth:userAuthApi,announcement:announcementApi,userInfo:userInfoApi,package:packageUserApi,order:orderUserApi};","map":{"version":3,"names":["config","getCookie","name","value","document","cookie","parts","split","length","_parts$pop","pop","shift","getUserAuthHeaders","xuserid","xtoken","headers","createUserRequest","url","options","arguments","undefined","timeout","api","fetchOptions","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","ok","Error","status","data","json","error","getUserApiUrl","path","baseUrl","baseURL","endsWith","slice","cleanPath","startsWith","userAuthApi","isAuthenticated","announcementApi","getPublicInfo","method","userInfoApi","getUserInfo","packageUserApi","getPackages","orderUserApi","createOrder","package_id","body","JSON","stringify","getOrders","getPayStatus","order_id","auth","announcement","userInfo","package","order"],"sources":["/opt/dev/star_share/web/src/services/userApi.ts"],"sourcesContent":["import config from '../config';\n\n// 请求响应类型定义\ninterface ApiResponse<T = any> {\n    code: number;\n    msg: string;\n    data: T;\n    total?: number;\n}\n\n// 请求配置接口\ninterface RequestConfig extends RequestInit {\n    timeout?: number;\n}\n\n// 从cookies中获取指定名称的值\nconst getCookie = (name: string): string | null => {\n    const value = `; ${document.cookie}`;\n    const parts = value.split(`; ${name}=`);\n    if (parts.length === 2) {\n        return parts.pop()?.split(';').shift() || null;\n    }\n    return null;\n};\n\n// 获取用户认证信息\nconst getUserAuthHeaders = (): { [key: string]: string } => {\n    const xuserid = getCookie('xuserid');\n    const xtoken = getCookie('xtoken');\n\n    const headers: { [key: string]: string } = {};\n\n    if (xuserid) {\n        headers['xuserid'] = xuserid;\n    }\n\n    if (xtoken) {\n        headers['xtoken'] = xtoken;\n    }\n\n    return headers;\n};\n\n// 创建用户端请求函数\nasync function createUserRequest(\n    url: string,\n    options: RequestConfig = {}\n): Promise<ApiResponse> {\n    const {\n        timeout = config.api.timeout,\n        ...fetchOptions\n    } = options;\n\n    // 准备请求头\n    const headers: { [key: string]: string } = {\n        'Content-Type': 'application/json',\n        ...getUserAuthHeaders(), // 添加用户认证头\n        ...(fetchOptions.headers as any || {}),\n    };\n\n    // 创建超时控制\n    const controller = new AbortController();\n    const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n    try {\n        const response = await fetch(url, {\n            ...fetchOptions,\n            headers,\n            signal: controller.signal,\n        });\n\n        clearTimeout(timeoutId);\n\n        // 处理HTTP错误\n        if (!response.ok) {\n            throw new Error(`HTTP Error: ${response.status}`);\n        }\n\n        // 解析响应数据\n        const data: ApiResponse = await response.json();\n\n        return data;\n    } catch (error) {\n        clearTimeout(timeoutId);\n\n        if (error instanceof Error) {\n            if (error.name === 'AbortError') {\n                throw new Error('请求超时');\n            }\n            throw error;\n        }\n\n        throw new Error('网络错误');\n    }\n}\n\n// 获取用户端API URL\nconst getUserApiUrl = (path: string): string => {\n    const baseUrl = config.api.baseURL.endsWith('/') ? config.api.baseURL.slice(0, -1) : config.api.baseURL;\n    const cleanPath = path.startsWith('/') ? path : `/${path}`;\n    return `${baseUrl}${cleanPath}`;\n};\n\n// 用户认证管理\nexport const userAuthApi = {\n    // 检查是否已登录\n    isAuthenticated: (): boolean => {\n        const xuserid = getCookie('xuserid');\n        const xtoken = getCookie('xtoken');\n        return !!(xuserid && xtoken);\n    },\n};\n\n// 公告API\nexport const announcementApi = {\n    // 获取公告信息\n    getPublicInfo: async (): Promise<ApiResponse<{ notice: string }>> => {\n        return createUserRequest(getUserApiUrl('/u/get_public_info'), {\n            method: 'GET',\n        });\n    },\n};\n\n// 用户信息API\nexport const userInfoApi = {\n    // 获取用户信息\n    getUserInfo: async (): Promise<ApiResponse<{\n        username: string;\n        email: string;\n        user_active_packages: {\n            package_id: string;\n            package_name: string;\n            level: string;\n            priority: string;\n            expiry_date: string;\n        };\n        status: number;\n        inviter_user: string;\n        created_at: string;\n    }>> => {\n        return createUserRequest(getUserApiUrl('/u/get_user_info'), {\n            method: 'GET',\n        });\n    },\n};\n\n// 套餐API\nexport const packageUserApi = {\n    // 获取套餐列表\n    getPackages: async (): Promise<ApiResponse<Array<{\n        id: number;\n        package_name: string;\n        category: string;\n        price: number;\n        duration: number;\n        introduce: string;\n        level: string;\n        priority: number;\n        remarks: string;\n        status: number;\n    }>>> => {\n        return createUserRequest(getUserApiUrl('/u/package'), {\n            method: 'GET',\n        });\n    },\n};\n\n// 订单API\nexport const orderUserApi = {\n    // 创建订单\n    createOrder: async (package_id: number): Promise<ApiResponse<{\n        success: boolean;\n        trade_no: string;\n        order_id: string;\n        payment_url: string | null;\n        qr_code: string;\n        channel: string;\n        pay_type: string;\n    }>> => {\n        return createUserRequest(getUserApiUrl('/u/pay_order'), {\n            method: 'POST',\n            body: JSON.stringify({ package_id }),\n        });\n    },\n\n    // 获取订单列表\n    getOrders: async (): Promise<ApiResponse<Array<{\n        order_id: string;\n        package_id: number;\n        package_name: string;\n        status: string;\n        created_at: string;\n    }>>> => {\n        return createUserRequest(getUserApiUrl('/u/pay_order'), {\n            method: 'GET',\n        });\n    },\n\n    // 查询订单支付状态\n    getPayStatus: async (order_id: string): Promise<ApiResponse<{}>> => {\n        return createUserRequest(getUserApiUrl(`/u/get_pay_status?order_id=${order_id}`), {\n            method: 'GET',\n        });\n    },\n};\n\n// 导出所有用户端API\nexport default {\n    auth: userAuthApi,\n    announcement: announcementApi,\n    userInfo: userInfoApi,\n    package: packageUserApi,\n    order: orderUserApi,\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import md5 from'md5';import config,{getAdminApiUrl,getStoredToken,clearStoredToken}from'../config';// 请求响应类型定义\n// 请求配置接口\n// 创建请求函数\nasync function createRequest(url){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const{skipAuth=false,timeout=config.api.timeout,...fetchOptions}=options;// 准备请求头\nconst headers={'Content-Type':'application/json',...(fetchOptions.headers||{})};// 添加认证token（如果不跳过认证）\nif(!skipAuth){const token=getStoredToken();if(token){headers['admin-token']=token;}}// 创建超时控制\nconst controller=new AbortController();const timeoutId=setTimeout(()=>controller.abort(),timeout);try{const response=await fetch(url,{...fetchOptions,headers,signal:controller.signal});clearTimeout(timeoutId);// 处理HTTP错误\nif(!response.ok){if(response.status===401||response.status===403){clearStoredToken();window.location.href=config.routes.adminLogin;throw new Error('登录已过期，请重新登录');}throw new Error(`HTTP Error: ${response.status}`);}// 解析响应数据\nconst data=await response.json();// 处理业务错误\nif(data.code!==20000){if(data.code===401||data.code===403){clearStoredToken();window.location.href=config.routes.adminLogin;}throw new Error(data.msg||'请求失败');}return data;}catch(error){clearTimeout(timeoutId);if(error instanceof Error){if(error.name==='AbortError'){throw new Error('请求超时');}throw error;}throw new Error('网络错误');}}// 管理员认证API\nexport const authApi={// 管理员登录\nlogin:async(username,password)=>{const hashedPassword=md5(password);return createRequest(getAdminApiUrl('/star/login'),{method:'POST',body:JSON.stringify({username,password:hashedPassword}),skipAuth:true});}};// 套餐管理API\nexport const packageApi={// 获取套餐列表\nlist:async params=>{const queryString=params?`?${new URLSearchParams(params).toString()}`:'';return createRequest(getAdminApiUrl(`/star/package${queryString}`),{method:'GET'});},// 创建套餐\ncreate:async data=>{return createRequest(getAdminApiUrl('/star/package'),{method:'POST',body:JSON.stringify(data)});},// 更新套餐\nupdate:async data=>{return createRequest(getAdminApiUrl('/star/package'),{method:'PUT',body:JSON.stringify(data)});},// 删除套餐\ndelete:async id=>{return createRequest(getAdminApiUrl('/star/package'),{method:'DELETE',body:JSON.stringify({id})});}};// 用户管理API\nexport const userApi={// 获取用户列表\nlist:async params=>{const queryString=params?`?${new URLSearchParams(params).toString()}`:'';return createRequest(getAdminApiUrl(`/star/user${queryString}`),{method:'GET'});},// 创建用户\ncreate:async data=>{return createRequest(getAdminApiUrl('/star/user'),{method:'POST',body:JSON.stringify(data)});},// 更新用户\nupdate:async data=>{return createRequest(getAdminApiUrl('/star/user'),{method:'PUT',body:JSON.stringify(data)});},// 删除用户\ndelete:async id=>{return createRequest(getAdminApiUrl('/star/user'),{method:'DELETE',body:JSON.stringify({id})});}};// 用户套餐API\nexport const userPackageApi={// 获取用户套餐列表\nlist:async params=>{const queryString=params?`?${new URLSearchParams(params).toString()}`:'';return createRequest(getAdminApiUrl(`/star/user_packages${queryString}`),{method:'GET'});}};// CDK管理API\nexport const cdkApi={// 获取CDK列表\nlist:async params=>{const queryString=params?`?${new URLSearchParams(params).toString()}`:'';return createRequest(getAdminApiUrl(`/star/cdk${queryString}`),{method:'GET'});},// 创建CDK\ncreate:async data=>{return createRequest(getAdminApiUrl('/star/cdk'),{method:'POST',body:JSON.stringify(data)});},// 更新CDK\nupdate:async data=>{return createRequest(getAdminApiUrl('/star/cdk'),{method:'PUT',body:JSON.stringify(data)});},// 删除CDK\ndelete:async id=>{return createRequest(getAdminApiUrl('/star/cdk'),{method:'DELETE',body:JSON.stringify({id})});}};// 配置管理API\nexport const configApi={// 获取配置列表\nlist:async()=>{return createRequest(getAdminApiUrl('/star/config'),{method:'GET'});},// 更新配置\nupdate:async data=>{return createRequest(getAdminApiUrl('/star/config'),{method:'PUT',body:JSON.stringify(data)});}};// 下拉数据API\nexport const dropdownApi={// 获取下拉数据\ngetData:async type=>{return createRequest(getAdminApiUrl(`/star/dropdown_data?type=${type}`),{method:'GET'});}};// 导出所有API\nexport default{auth:authApi,package:packageApi,user:userApi,userPackage:userPackageApi,cdk:cdkApi,config:configApi,dropdown:dropdownApi};","map":{"version":3,"names":["md5","config","getAdminApiUrl","getStoredToken","clearStoredToken","createRequest","url","options","arguments","length","undefined","skipAuth","timeout","api","fetchOptions","headers","token","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","ok","status","window","location","href","routes","adminLogin","Error","data","json","code","msg","error","name","authApi","login","username","password","hashedPassword","method","body","JSON","stringify","packageApi","list","params","queryString","URLSearchParams","toString","create","update","delete","id","userApi","userPackageApi","cdkApi","configApi","dropdownApi","getData","type","auth","package","user","userPackage","cdk","dropdown"],"sources":["/opt/dev/star_share/web/src/services/api.ts"],"sourcesContent":["import md5 from 'md5';\nimport config, { getAdminApiUrl, getStoredToken, clearStoredToken } from '../config';\n\n// 请求响应类型定义\ninterface ApiResponse<T = any> {\n  code: number;\n  msg: string;\n  data: T;\n  total?: number;\n}\n\n// 请求配置接口\ninterface RequestConfig extends RequestInit {\n  skipAuth?: boolean;\n  timeout?: number;\n}\n\n// 创建请求函数\nasync function createRequest(\n  url: string,\n  options: RequestConfig = {}\n): Promise<ApiResponse> {\n  const {\n    skipAuth = false,\n    timeout = config.api.timeout,\n    ...fetchOptions\n  } = options;\n\n  // 准备请求头\n  const headers: { [key: string]: string } = {\n    'Content-Type': 'application/json',\n    ...(fetchOptions.headers as any || {}),\n  };\n\n  // 添加认证token（如果不跳过认证）\n  if (!skipAuth) {\n    const token = getStoredToken();\n    if (token) {\n      headers['admin-token'] = token;\n    }\n  }\n\n  // 创建超时控制\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n  try {\n    const response = await fetch(url, {\n      ...fetchOptions,\n      headers,\n      signal: controller.signal,\n    });\n\n    clearTimeout(timeoutId);\n\n    // 处理HTTP错误\n    if (!response.ok) {\n      if (response.status === 401 || response.status === 403) {\n        clearStoredToken();\n        window.location.href = config.routes.adminLogin;\n        throw new Error('登录已过期，请重新登录');\n      }\n      throw new Error(`HTTP Error: ${response.status}`);\n    }\n\n    // 解析响应数据\n    const data: ApiResponse = await response.json();\n\n    // 处理业务错误\n    if (data.code !== 20000) {\n      if (data.code === 401 || data.code === 403) {\n        clearStoredToken();\n        window.location.href = config.routes.adminLogin;\n      }\n      throw new Error(data.msg || '请求失败');\n    }\n\n    return data;\n  } catch (error) {\n    clearTimeout(timeoutId);\n\n    if (error instanceof Error) {\n      if (error.name === 'AbortError') {\n        throw new Error('请求超时');\n      }\n      throw error;\n    }\n\n    throw new Error('网络错误');\n  }\n}\n\n// 管理员认证API\nexport const authApi = {\n  // 管理员登录\n  login: async (username: string, password: string): Promise<ApiResponse<{ admin_token: string }>> => {\n    const hashedPassword = md5(password);\n\n    return createRequest(getAdminApiUrl('/star/login'), {\n      method: 'POST',\n      body: JSON.stringify({ username, password: hashedPassword }),\n      skipAuth: true,\n    });\n  },\n};\n\n// 套餐管理API\nexport const packageApi = {\n  // 获取套餐列表\n  list: async (params?: any): Promise<ApiResponse<any[]>> => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/package${queryString}`), {\n      method: 'GET',\n    });\n  },\n\n  // 创建套餐\n  create: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/package'), {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 更新套餐\n  update: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/package'), {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 删除套餐\n  delete: async (id: number): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/package'), {\n      method: 'DELETE',\n      body: JSON.stringify({ id }),\n    });\n  },\n};\n\n// 用户管理API\nexport const userApi = {\n  // 获取用户列表\n  list: async (params?: any): Promise<ApiResponse<any[]>> => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/user${queryString}`), {\n      method: 'GET',\n    });\n  },\n\n  // 创建用户\n  create: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/user'), {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 更新用户\n  update: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/user'), {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 删除用户\n  delete: async (id: number): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/user'), {\n      method: 'DELETE',\n      body: JSON.stringify({ id }),\n    });\n  },\n};\n\n// 用户套餐API\nexport const userPackageApi = {\n  // 获取用户套餐列表\n  list: async (params?: any): Promise<ApiResponse<any[]>> => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/user_packages${queryString}`), {\n      method: 'GET',\n    });\n  },\n};\n\n// CDK管理API\nexport const cdkApi = {\n  // 获取CDK列表\n  list: async (params?: any): Promise<ApiResponse<any[]>> => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/cdk${queryString}`), {\n      method: 'GET',\n    });\n  },\n\n  // 创建CDK\n  create: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/cdk'), {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 更新CDK\n  update: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/cdk'), {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 删除CDK\n  delete: async (id: number): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/cdk'), {\n      method: 'DELETE',\n      body: JSON.stringify({ id }),\n    });\n  },\n};\n\n// 配置管理API\nexport const configApi = {\n  // 获取配置列表\n  list: async (): Promise<ApiResponse<any[]>> => {\n    return createRequest(getAdminApiUrl('/star/config'), {\n      method: 'GET',\n    });\n  },\n\n  // 更新配置\n  update: async (data: { key: string; value: string }): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/config'), {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n};\n\n// 下拉数据API\nexport const dropdownApi = {\n  // 获取下拉数据\n  getData: async (type: string): Promise<ApiResponse<any[]>> => {\n    return createRequest(getAdminApiUrl(`/star/dropdown_data?type=${type}`), {\n      method: 'GET',\n    });\n  },\n};\n\n// 导出所有API\nexport default {\n  auth: authApi,\n  package: packageApi,\n  user: userApi,\n  userPackage: userPackageApi,\n  cdk: cdkApi,\n  config: configApi,\n  dropdown: dropdownApi,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use client\";\n\nimport { useInput } from \"./chunk-B74GOECG.mjs\";\n\n// src/textarea.tsx\nimport { dataAttr, mergeProps } from \"@heroui/shared-utils\";\nimport { forwardRef } from \"@heroui/system\";\nimport { useMemo, useState } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { CloseFilledIcon } from \"@heroui/shared-icons\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Textarea = forwardRef((_ref, ref) => {\n  let {\n    style,\n    minRows = 3,\n    maxRows = 8,\n    cacheMeasurements = false,\n    disableAutosize = false,\n    onHeightChange,\n    ...otherProps\n  } = _ref;\n  const {\n    Component,\n    label,\n    description,\n    startContent,\n    endContent,\n    hasHelper,\n    shouldLabelBeOutside,\n    shouldLabelBeInside,\n    isInvalid,\n    errorMessage,\n    getBaseProps,\n    getLabelProps,\n    getInputProps,\n    getInnerWrapperProps,\n    getInputWrapperProps,\n    getHelperWrapperProps,\n    getDescriptionProps,\n    getErrorMessageProps,\n    isClearable,\n    getClearButtonProps\n  } = useInput({\n    ...otherProps,\n    ref,\n    isMultiline: true\n  });\n  const [hasMultipleRows, setIsHasMultipleRows] = useState(minRows > 1);\n  const [isLimitReached, setIsLimitReached] = useState(false);\n  const labelContent = label ? /* @__PURE__ */jsx(\"label\", {\n    ...getLabelProps(),\n    children: label\n  }) : null;\n  const inputProps = getInputProps();\n  const handleHeightChange = (height, meta) => {\n    if (minRows === 1) {\n      setIsHasMultipleRows(height >= meta.rowHeight * 2);\n    }\n    if (maxRows > minRows) {\n      const limitReached = height >= maxRows * meta.rowHeight;\n      setIsLimitReached(limitReached);\n    }\n    onHeightChange == null ? void 0 : onHeightChange(height, meta);\n  };\n  const content = disableAutosize ? /* @__PURE__ */jsx(\"textarea\", {\n    ...inputProps,\n    style: mergeProps(inputProps.style, style != null ? style : {})\n  }) : /* @__PURE__ */jsx(TextareaAutosize, {\n    ...inputProps,\n    cacheMeasurements,\n    \"data-hide-scroll\": dataAttr(!isLimitReached),\n    maxRows,\n    minRows,\n    style: mergeProps(inputProps.style, style != null ? style : {}),\n    onHeightChange: handleHeightChange\n  });\n  const clearButtonContent = useMemo(() => {\n    return isClearable ? /* @__PURE__ */jsx(\"button\", {\n      ...getClearButtonProps(),\n      children: /* @__PURE__ */jsx(CloseFilledIcon, {})\n    }) : null;\n  }, [isClearable, getClearButtonProps]);\n  const innerWrapper = useMemo(() => {\n    if (startContent || endContent) {\n      return /* @__PURE__ */jsxs(\"div\", {\n        ...getInnerWrapperProps(),\n        children: [startContent, content, endContent]\n      });\n    }\n    return /* @__PURE__ */jsx(\"div\", {\n      ...getInnerWrapperProps(),\n      children: content\n    });\n  }, [startContent, inputProps, endContent, getInnerWrapperProps]);\n  const shouldShowError = isInvalid && errorMessage;\n  const hasHelperContent = shouldShowError || description;\n  return /* @__PURE__ */jsxs(Component, {\n    ...getBaseProps(),\n    children: [shouldLabelBeOutside ? labelContent : null, /* @__PURE__ */jsxs(\"div\", {\n      ...getInputWrapperProps(),\n      \"data-has-multiple-rows\": dataAttr(hasMultipleRows),\n      children: [shouldLabelBeInside ? labelContent : null, innerWrapper, clearButtonContent]\n    }), hasHelper && hasHelperContent ? /* @__PURE__ */jsx(\"div\", {\n      ...getHelperWrapperProps(),\n      children: shouldShowError ? /* @__PURE__ */jsx(\"div\", {\n        ...getErrorMessageProps(),\n        children: errorMessage\n      }) : /* @__PURE__ */jsx(\"div\", {\n        ...getDescriptionProps(),\n        children: description\n      })\n    }) : null]\n  });\n});\nTextarea.displayName = \"HeroUI.Textarea\";\nvar textarea_default = Textarea;\nexport { textarea_default };","map":{"version":3,"names":["useInput","dataAttr","mergeProps","forwardRef","useMemo","useState","TextareaAutosize","CloseFilledIcon","jsx","jsxs","Textarea","_ref","ref","style","minRows","maxRows","cacheMeasurements","disableAutosize","onHeightChange","otherProps","Component","label","description","startContent","endContent","hasHelper","shouldLabelBeOutside","shouldLabelBeInside","isInvalid","errorMessage","getBaseProps","getLabelProps","getInputProps","getInnerWrapperProps","getInputWrapperProps","getHelperWrapperProps","getDescriptionProps","getErrorMessageProps","isClearable","getClearButtonProps","isMultiline","hasMultipleRows","setIsHasMultipleRows","isLimitReached","setIsLimitReached","labelContent","children","inputProps","handleHeightChange","height","meta","rowHeight","limitReached","content","clearButtonContent","innerWrapper","shouldShowError","hasHelperContent","displayName","textarea_default"],"sources":["/opt/dev/star_share/web/node_modules/.pnpm/@heroui+input@2.4.24_@heroui+system@2.4.19_@heroui+theme@2.4.19_@types+react@19.1.8_react-dom@19.1.0_react@19.1.0/node_modules/@heroui/input/dist/chunk-QESP63UR.mjs"],"sourcesContent":["\"use client\";\nimport {\n  useInput\n} from \"./chunk-B74GOECG.mjs\";\n\n// src/textarea.tsx\nimport { dataAttr, mergeProps } from \"@heroui/shared-utils\";\nimport { forwardRef } from \"@heroui/system\";\nimport { useMemo, useState } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport { CloseFilledIcon } from \"@heroui/shared-icons\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Textarea = forwardRef(\n  ({\n    style,\n    minRows = 3,\n    maxRows = 8,\n    cacheMeasurements = false,\n    disableAutosize = false,\n    onHeightChange,\n    ...otherProps\n  }, ref) => {\n    const {\n      Component,\n      label,\n      description,\n      startContent,\n      endContent,\n      hasHelper,\n      shouldLabelBeOutside,\n      shouldLabelBeInside,\n      isInvalid,\n      errorMessage,\n      getBaseProps,\n      getLabelProps,\n      getInputProps,\n      getInnerWrapperProps,\n      getInputWrapperProps,\n      getHelperWrapperProps,\n      getDescriptionProps,\n      getErrorMessageProps,\n      isClearable,\n      getClearButtonProps\n    } = useInput({ ...otherProps, ref, isMultiline: true });\n    const [hasMultipleRows, setIsHasMultipleRows] = useState(minRows > 1);\n    const [isLimitReached, setIsLimitReached] = useState(false);\n    const labelContent = label ? /* @__PURE__ */ jsx(\"label\", { ...getLabelProps(), children: label }) : null;\n    const inputProps = getInputProps();\n    const handleHeightChange = (height, meta) => {\n      if (minRows === 1) {\n        setIsHasMultipleRows(height >= meta.rowHeight * 2);\n      }\n      if (maxRows > minRows) {\n        const limitReached = height >= maxRows * meta.rowHeight;\n        setIsLimitReached(limitReached);\n      }\n      onHeightChange == null ? void 0 : onHeightChange(height, meta);\n    };\n    const content = disableAutosize ? /* @__PURE__ */ jsx(\"textarea\", { ...inputProps, style: mergeProps(inputProps.style, style != null ? style : {}) }) : /* @__PURE__ */ jsx(\n      TextareaAutosize,\n      {\n        ...inputProps,\n        cacheMeasurements,\n        \"data-hide-scroll\": dataAttr(!isLimitReached),\n        maxRows,\n        minRows,\n        style: mergeProps(inputProps.style, style != null ? style : {}),\n        onHeightChange: handleHeightChange\n      }\n    );\n    const clearButtonContent = useMemo(() => {\n      return isClearable ? /* @__PURE__ */ jsx(\"button\", { ...getClearButtonProps(), children: /* @__PURE__ */ jsx(CloseFilledIcon, {}) }) : null;\n    }, [isClearable, getClearButtonProps]);\n    const innerWrapper = useMemo(() => {\n      if (startContent || endContent) {\n        return /* @__PURE__ */ jsxs(\"div\", { ...getInnerWrapperProps(), children: [\n          startContent,\n          content,\n          endContent\n        ] });\n      }\n      return /* @__PURE__ */ jsx(\"div\", { ...getInnerWrapperProps(), children: content });\n    }, [startContent, inputProps, endContent, getInnerWrapperProps]);\n    const shouldShowError = isInvalid && errorMessage;\n    const hasHelperContent = shouldShowError || description;\n    return /* @__PURE__ */ jsxs(Component, { ...getBaseProps(), children: [\n      shouldLabelBeOutside ? labelContent : null,\n      /* @__PURE__ */ jsxs(\"div\", { ...getInputWrapperProps(), \"data-has-multiple-rows\": dataAttr(hasMultipleRows), children: [\n        shouldLabelBeInside ? labelContent : null,\n        innerWrapper,\n        clearButtonContent\n      ] }),\n      hasHelper && hasHelperContent ? /* @__PURE__ */ jsx(\"div\", { ...getHelperWrapperProps(), children: shouldShowError ? /* @__PURE__ */ jsx(\"div\", { ...getErrorMessageProps(), children: errorMessage }) : /* @__PURE__ */ jsx(\"div\", { ...getDescriptionProps(), children: description }) }) : null\n    ] });\n  }\n);\nTextarea.displayName = \"HeroUI.Textarea\";\nvar textarea_default = Textarea;\n\nexport {\n  textarea_default\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
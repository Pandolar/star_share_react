{"ast":null,"code":"import md5 from 'md5';\nimport config, { getAdminApiUrl, getStoredToken, clearStoredToken } from '../config';\n\n// 请求响应类型定义\n\n// 请求配置接口\n\n// 创建请求函数\nasync function createRequest(url, options = {}) {\n  const {\n    skipAuth = false,\n    timeout = config.api.timeout,\n    ...fetchOptions\n  } = options;\n\n  // 准备请求头\n  const headers = {\n    'Content-Type': 'application/json',\n    ...(fetchOptions.headers || {})\n  };\n\n  // 添加认证token（如果不跳过认证）\n  if (!skipAuth) {\n    const token = getStoredToken();\n    if (token) {\n      headers['admin_token'] = token;\n    }\n  }\n\n  // 创建超时控制\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), timeout);\n  try {\n    const response = await fetch(url, {\n      ...fetchOptions,\n      headers,\n      signal: controller.signal\n    });\n    clearTimeout(timeoutId);\n\n    // 处理HTTP错误\n    if (!response.ok) {\n      if (response.status === 401 || response.status === 403) {\n        clearStoredToken();\n        window.location.href = config.routes.adminLogin;\n        throw new Error('登录已过期，请重新登录');\n      }\n      throw new Error(`HTTP Error: ${response.status}`);\n    }\n\n    // 解析响应数据\n    const data = await response.json();\n\n    // 处理业务错误\n    if (data.code !== 20000) {\n      if (data.code === 401 || data.code === 403) {\n        clearStoredToken();\n        window.location.href = config.routes.adminLogin;\n      }\n      throw new Error(data.msg || '请求失败');\n    }\n    return data;\n  } catch (error) {\n    clearTimeout(timeoutId);\n    if (error instanceof Error) {\n      if (error.name === 'AbortError') {\n        throw new Error('请求超时');\n      }\n      throw error;\n    }\n    throw new Error('网络错误');\n  }\n}\n\n// 管理员认证API\nexport const authApi = {\n  // 管理员登录\n  login: async (username, password) => {\n    const hashedPassword = md5(password);\n    return createRequest(getAdminApiUrl('/star/login'), {\n      method: 'POST',\n      body: JSON.stringify({\n        username,\n        password: hashedPassword\n      }),\n      skipAuth: true\n    });\n  }\n};\n\n// 套餐管理API\nexport const packageApi = {\n  // 获取套餐列表\n  list: async params => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/package${queryString}`), {\n      method: 'GET'\n    });\n  },\n  // 创建套餐\n  create: async data => {\n    return createRequest(getAdminApiUrl('/star/package'), {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n  },\n  // 更新套餐\n  update: async data => {\n    return createRequest(getAdminApiUrl('/star/package'), {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  },\n  // 删除套餐\n  delete: async id => {\n    return createRequest(getAdminApiUrl('/star/package'), {\n      method: 'DELETE',\n      body: JSON.stringify({\n        id\n      })\n    });\n  }\n};\n\n// 用户管理API\nexport const userApi = {\n  // 获取用户列表\n  list: async params => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/user${queryString}`), {\n      method: 'GET'\n    });\n  },\n  // 创建用户\n  create: async data => {\n    return createRequest(getAdminApiUrl('/star/user'), {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n  },\n  // 更新用户\n  update: async data => {\n    return createRequest(getAdminApiUrl('/star/user'), {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  },\n  // 删除用户\n  delete: async id => {\n    return createRequest(getAdminApiUrl('/star/user'), {\n      method: 'DELETE',\n      body: JSON.stringify({\n        id\n      })\n    });\n  }\n};\n\n// 用户套餐API\nexport const userPackageApi = {\n  // 获取用户套餐列表\n  list: async params => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/user_packages${queryString}`), {\n      method: 'GET'\n    });\n  }\n};\n\n// CDK管理API\nexport const cdkApi = {\n  // 获取CDK列表\n  list: async params => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/cdk${queryString}`), {\n      method: 'GET'\n    });\n  },\n  // 创建CDK\n  create: async data => {\n    return createRequest(getAdminApiUrl('/star/cdk'), {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n  },\n  // 更新CDK\n  update: async data => {\n    return createRequest(getAdminApiUrl('/star/cdk'), {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  },\n  // 删除CDK\n  delete: async id => {\n    return createRequest(getAdminApiUrl('/star/cdk'), {\n      method: 'DELETE',\n      body: JSON.stringify({\n        id\n      })\n    });\n  }\n};\n\n// 配置管理API\nexport const configApi = {\n  // 获取配置列表\n  list: async () => {\n    return createRequest(getAdminApiUrl('/star/config'), {\n      method: 'GET'\n    });\n  },\n  // 更新配置\n  update: async data => {\n    return createRequest(getAdminApiUrl('/star/config'), {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  }\n};\n\n// 订单管理API\nexport const orderApi = {\n  // 获取订单列表\n  list: async params => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/order${queryString}`), {\n      method: 'GET'\n    });\n  },\n  // 更新订单\n  update: async data => {\n    return createRequest(getAdminApiUrl('/star/order'), {\n      method: 'PUT',\n      body: JSON.stringify(data)\n    });\n  },\n  // 删除订单\n  delete: async id => {\n    return createRequest(getAdminApiUrl('/star/order'), {\n      method: 'DELETE',\n      body: JSON.stringify({\n        id\n      })\n    });\n  }\n};\n\n// 登出API\nexport const logoutApi = {\n  // 管理员登出\n  logout: async () => {\n    return createRequest(getAdminApiUrl('/star/logout'), {\n      method: 'POST'\n    });\n  }\n};\n\n// 下拉数据API\nexport const dropdownApi = {\n  // 获取下拉数据\n  getData: async type => {\n    return createRequest(getAdminApiUrl(`/star/dropdown_data?type=${type}`), {\n      method: 'GET'\n    });\n  }\n};\n\n// 导出所有API\nexport default {\n  auth: authApi,\n  package: packageApi,\n  user: userApi,\n  userPackage: userPackageApi,\n  cdk: cdkApi,\n  config: configApi,\n  order: orderApi,\n  logout: logoutApi,\n  dropdown: dropdownApi\n};","map":{"version":3,"names":["md5","config","getAdminApiUrl","getStoredToken","clearStoredToken","createRequest","url","options","skipAuth","timeout","api","fetchOptions","headers","token","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","ok","status","window","location","href","routes","adminLogin","Error","data","json","code","msg","error","name","authApi","login","username","password","hashedPassword","method","body","JSON","stringify","packageApi","list","params","queryString","URLSearchParams","toString","create","update","delete","id","userApi","userPackageApi","cdkApi","configApi","orderApi","logoutApi","logout","dropdownApi","getData","type","auth","package","user","userPackage","cdk","order","dropdown"],"sources":["/opt/dev/star_share/web/src/services/api.ts"],"sourcesContent":["import md5 from 'md5';\nimport config, { getAdminApiUrl, getStoredToken, clearStoredToken } from '../config';\n\n// 请求响应类型定义\ninterface ApiResponse<T = any> {\n  code: number;\n  msg: string;\n  data: T;\n  total?: number;\n}\n\n// 请求配置接口\ninterface RequestConfig extends RequestInit {\n  skipAuth?: boolean;\n  timeout?: number;\n}\n\n// 创建请求函数\nasync function createRequest(\n  url: string,\n  options: RequestConfig = {}\n): Promise<ApiResponse> {\n  const {\n    skipAuth = false,\n    timeout = config.api.timeout,\n    ...fetchOptions\n  } = options;\n\n  // 准备请求头\n  const headers: { [key: string]: string } = {\n    'Content-Type': 'application/json',\n    ...(fetchOptions.headers as any || {}),\n  };\n\n  // 添加认证token（如果不跳过认证）\n  if (!skipAuth) {\n    const token = getStoredToken();\n    if (token) {\n      headers['admin_token'] = token;\n    }\n  }\n\n  // 创建超时控制\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), timeout);\n\n  try {\n    const response = await fetch(url, {\n      ...fetchOptions,\n      headers,\n      signal: controller.signal,\n    });\n\n    clearTimeout(timeoutId);\n\n    // 处理HTTP错误\n    if (!response.ok) {\n      if (response.status === 401 || response.status === 403) {\n        clearStoredToken();\n        window.location.href = config.routes.adminLogin;\n        throw new Error('登录已过期，请重新登录');\n      }\n      throw new Error(`HTTP Error: ${response.status}`);\n    }\n\n    // 解析响应数据\n    const data: ApiResponse = await response.json();\n\n    // 处理业务错误\n    if (data.code !== 20000) {\n      if (data.code === 401 || data.code === 403) {\n        clearStoredToken();\n        window.location.href = config.routes.adminLogin;\n      }\n      throw new Error(data.msg || '请求失败');\n    }\n\n    return data;\n  } catch (error) {\n    clearTimeout(timeoutId);\n\n    if (error instanceof Error) {\n      if (error.name === 'AbortError') {\n        throw new Error('请求超时');\n      }\n      throw error;\n    }\n\n    throw new Error('网络错误');\n  }\n}\n\n// 管理员认证API\nexport const authApi = {\n  // 管理员登录\n  login: async (username: string, password: string): Promise<ApiResponse<{ admin_token: string }>> => {\n    const hashedPassword = md5(password);\n\n    return createRequest(getAdminApiUrl('/star/login'), {\n      method: 'POST',\n      body: JSON.stringify({ username, password: hashedPassword }),\n      skipAuth: true,\n    });\n  },\n};\n\n// 套餐管理API\nexport const packageApi = {\n  // 获取套餐列表\n  list: async (params?: any): Promise<ApiResponse<any[]>> => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/package${queryString}`), {\n      method: 'GET',\n    });\n  },\n\n  // 创建套餐\n  create: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/package'), {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 更新套餐\n  update: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/package'), {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 删除套餐\n  delete: async (id: number): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/package'), {\n      method: 'DELETE',\n      body: JSON.stringify({ id }),\n    });\n  },\n};\n\n// 用户管理API\nexport const userApi = {\n  // 获取用户列表\n  list: async (params?: any): Promise<ApiResponse<any[]>> => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/user${queryString}`), {\n      method: 'GET',\n    });\n  },\n\n  // 创建用户\n  create: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/user'), {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 更新用户\n  update: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/user'), {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 删除用户\n  delete: async (id: number): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/user'), {\n      method: 'DELETE',\n      body: JSON.stringify({ id }),\n    });\n  },\n};\n\n// 用户套餐API\nexport const userPackageApi = {\n  // 获取用户套餐列表\n  list: async (params?: any): Promise<ApiResponse<any[]>> => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/user_packages${queryString}`), {\n      method: 'GET',\n    });\n  },\n};\n\n// CDK管理API\nexport const cdkApi = {\n  // 获取CDK列表\n  list: async (params?: any): Promise<ApiResponse<any[]>> => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/cdk${queryString}`), {\n      method: 'GET',\n    });\n  },\n\n  // 创建CDK\n  create: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/cdk'), {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 更新CDK\n  update: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/cdk'), {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 删除CDK\n  delete: async (id: number): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/cdk'), {\n      method: 'DELETE',\n      body: JSON.stringify({ id }),\n    });\n  },\n};\n\n// 配置管理API\nexport const configApi = {\n  // 获取配置列表\n  list: async (): Promise<ApiResponse<any[]>> => {\n    return createRequest(getAdminApiUrl('/star/config'), {\n      method: 'GET',\n    });\n  },\n\n  // 更新配置\n  update: async (data: { key: string; value: string }): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/config'), {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n};\n\n// 订单管理API\nexport const orderApi = {\n  // 获取订单列表\n  list: async (params?: any): Promise<ApiResponse<any[]>> => {\n    const queryString = params ? `?${new URLSearchParams(params).toString()}` : '';\n    return createRequest(getAdminApiUrl(`/star/order${queryString}`), {\n      method: 'GET',\n    });\n  },\n\n  // 更新订单\n  update: async (data: any): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/order'), {\n      method: 'PUT',\n      body: JSON.stringify(data),\n    });\n  },\n\n  // 删除订单\n  delete: async (id: number): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/order'), {\n      method: 'DELETE',\n      body: JSON.stringify({ id }),\n    });\n  },\n};\n\n// 登出API\nexport const logoutApi = {\n  // 管理员登出\n  logout: async (): Promise<ApiResponse> => {\n    return createRequest(getAdminApiUrl('/star/logout'), {\n      method: 'POST',\n    });\n  },\n};\n\n// 下拉数据API\nexport const dropdownApi = {\n  // 获取下拉数据\n  getData: async (type: string): Promise<ApiResponse<any[]>> => {\n    return createRequest(getAdminApiUrl(`/star/dropdown_data?type=${type}`), {\n      method: 'GET',\n    });\n  },\n};\n\n// 导出所有API\nexport default {\n  auth: authApi,\n  package: packageApi,\n  user: userApi,\n  userPackage: userPackageApi,\n  cdk: cdkApi,\n  config: configApi,\n  order: orderApi,\n  logout: logoutApi,\n  dropdown: dropdownApi,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
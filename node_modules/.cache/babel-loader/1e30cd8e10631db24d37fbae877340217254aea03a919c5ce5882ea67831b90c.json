{"ast":null,"code":"\"use client\";\n\nimport { useCalendarBase } from \"./chunk-JH6U4LUG.mjs\";\n\n// src/use-range-calendar.ts\nimport { useMemo, useRef } from \"react\";\nimport { filterDOMProps } from \"@heroui/react-utils\";\nimport { useRangeCalendar as useAriaRangeCalendar } from \"@react-aria/calendar\";\nimport { useRangeCalendarState } from \"@react-stately/calendar\";\nimport { createCalendar } from \"@internationalized/date\";\nimport { clsx, chain } from \"@heroui/shared-utils\";\nfunction useRangeCalendar(_ref) {\n  let {\n    buttonPickerProps: buttonPickerPropsProp,\n    className,\n    ...originalProps\n  } = _ref;\n  const {\n    Component,\n    slots,\n    children,\n    domRef,\n    locale,\n    showHelper,\n    firstDayOfWeek,\n    minValue,\n    maxValue,\n    weekdayStyle,\n    visibleDuration,\n    shouldFilterDOMProps,\n    isHeaderExpanded,\n    visibleMonths,\n    disableAnimation,\n    createCalendar: createCalendarProp,\n    showMonthAndYearPickers,\n    baseProps,\n    getPrevButtonProps,\n    getNextButtonProps,\n    getErrorMessageProps,\n    setIsHeaderExpanded,\n    topContent,\n    bottomContent,\n    errorMessage,\n    classNames,\n    otherProps\n  } = useCalendarBase({\n    ...originalProps,\n    isRange: true\n  });\n  const headerRef = useRef(null);\n  const state = useRangeCalendarState({\n    ...originalProps,\n    locale,\n    minValue,\n    maxValue,\n    visibleDuration,\n    createCalendar: !createCalendarProp || typeof createCalendarProp !== \"function\" ? createCalendar : createCalendarProp\n  });\n  const {\n    title,\n    calendarProps,\n    prevButtonProps,\n    nextButtonProps,\n    errorMessageProps\n  } = useAriaRangeCalendar(originalProps, state, domRef);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const buttonPickerProps = {\n    ...buttonPickerPropsProp,\n    onPress: chain(buttonPickerPropsProp == null ? void 0 : buttonPickerPropsProp.onPress, () => setIsHeaderExpanded(!isHeaderExpanded))\n  };\n  const getBaseCalendarProps = function () {\n    let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return {\n      ...baseProps,\n      Component,\n      showHelper,\n      firstDayOfWeek,\n      topContent,\n      bottomContent,\n      buttonPickerProps,\n      calendarRef: domRef,\n      calendarProps,\n      prevButtonProps: getPrevButtonProps(prevButtonProps),\n      nextButtonProps: getNextButtonProps(nextButtonProps),\n      errorMessageProps: getErrorMessageProps(errorMessageProps),\n      className: slots.base({\n        class: baseStyles\n      }),\n      errorMessage,\n      ...filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }),\n      ...props\n    };\n  };\n  const context = useMemo(() => ({\n    state,\n    slots,\n    headerRef,\n    weekdayStyle,\n    isHeaderExpanded,\n    setIsHeaderExpanded,\n    visibleMonths,\n    showMonthAndYearPickers,\n    classNames,\n    disableAnimation\n  }), [state, slots, classNames, weekdayStyle, isHeaderExpanded, setIsHeaderExpanded, visibleMonths, disableAnimation, showMonthAndYearPickers]);\n  return {\n    Component,\n    children,\n    domRef,\n    context,\n    state,\n    slots,\n    title,\n    classNames,\n    getBaseCalendarProps\n  };\n}\nexport { useRangeCalendar };","map":{"version":3,"names":["useCalendarBase","useMemo","useRef","filterDOMProps","useRangeCalendar","useAriaRangeCalendar","useRangeCalendarState","createCalendar","clsx","chain","_ref","buttonPickerProps","buttonPickerPropsProp","className","originalProps","Component","slots","children","domRef","locale","showHelper","firstDayOfWeek","minValue","maxValue","weekdayStyle","visibleDuration","shouldFilterDOMProps","isHeaderExpanded","visibleMonths","disableAnimation","createCalendarProp","showMonthAndYearPickers","baseProps","getPrevButtonProps","getNextButtonProps","getErrorMessageProps","setIsHeaderExpanded","topContent","bottomContent","errorMessage","classNames","otherProps","isRange","headerRef","state","title","calendarProps","prevButtonProps","nextButtonProps","errorMessageProps","baseStyles","base","onPress","getBaseCalendarProps","props","arguments","length","undefined","calendarRef","class","enabled","context"],"sources":["/opt/dev/star_share/web/node_modules/.pnpm/@heroui+calendar@2.2.23_@heroui+system@2.4.19_@heroui+theme@2.4.19_framer-motion@12.23.9_react-dom@19.1.0_react@19.1.0/node_modules/@heroui/calendar/dist/chunk-43O4VXA5.mjs"],"sourcesContent":["\"use client\";\nimport {\n  useCalendarBase\n} from \"./chunk-JH6U4LUG.mjs\";\n\n// src/use-range-calendar.ts\nimport { useMemo, useRef } from \"react\";\nimport { filterDOMProps } from \"@heroui/react-utils\";\nimport { useRangeCalendar as useAriaRangeCalendar } from \"@react-aria/calendar\";\nimport { useRangeCalendarState } from \"@react-stately/calendar\";\nimport { createCalendar } from \"@internationalized/date\";\nimport { clsx, chain } from \"@heroui/shared-utils\";\nfunction useRangeCalendar({\n  buttonPickerProps: buttonPickerPropsProp,\n  className,\n  ...originalProps\n}) {\n  const {\n    Component,\n    slots,\n    children,\n    domRef,\n    locale,\n    showHelper,\n    firstDayOfWeek,\n    minValue,\n    maxValue,\n    weekdayStyle,\n    visibleDuration,\n    shouldFilterDOMProps,\n    isHeaderExpanded,\n    visibleMonths,\n    disableAnimation,\n    createCalendar: createCalendarProp,\n    showMonthAndYearPickers,\n    baseProps,\n    getPrevButtonProps,\n    getNextButtonProps,\n    getErrorMessageProps,\n    setIsHeaderExpanded,\n    topContent,\n    bottomContent,\n    errorMessage,\n    classNames,\n    otherProps\n  } = useCalendarBase({ ...originalProps, isRange: true });\n  const headerRef = useRef(null);\n  const state = useRangeCalendarState({\n    ...originalProps,\n    locale,\n    minValue,\n    maxValue,\n    visibleDuration,\n    createCalendar: !createCalendarProp || typeof createCalendarProp !== \"function\" ? createCalendar : createCalendarProp\n  });\n  const { title, calendarProps, prevButtonProps, nextButtonProps, errorMessageProps } = useAriaRangeCalendar(originalProps, state, domRef);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const buttonPickerProps = {\n    ...buttonPickerPropsProp,\n    onPress: chain(buttonPickerPropsProp == null ? void 0 : buttonPickerPropsProp.onPress, () => setIsHeaderExpanded(!isHeaderExpanded))\n  };\n  const getBaseCalendarProps = (props = {}) => {\n    return {\n      ...baseProps,\n      Component,\n      showHelper,\n      firstDayOfWeek,\n      topContent,\n      bottomContent,\n      buttonPickerProps,\n      calendarRef: domRef,\n      calendarProps,\n      prevButtonProps: getPrevButtonProps(prevButtonProps),\n      nextButtonProps: getNextButtonProps(nextButtonProps),\n      errorMessageProps: getErrorMessageProps(errorMessageProps),\n      className: slots.base({ class: baseStyles }),\n      errorMessage,\n      ...filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }),\n      ...props\n    };\n  };\n  const context = useMemo(\n    () => ({\n      state,\n      slots,\n      headerRef,\n      weekdayStyle,\n      isHeaderExpanded,\n      setIsHeaderExpanded,\n      visibleMonths,\n      showMonthAndYearPickers,\n      classNames,\n      disableAnimation\n    }),\n    [\n      state,\n      slots,\n      classNames,\n      weekdayStyle,\n      isHeaderExpanded,\n      setIsHeaderExpanded,\n      visibleMonths,\n      disableAnimation,\n      showMonthAndYearPickers\n    ]\n  );\n  return {\n    Component,\n    children,\n    domRef,\n    context,\n    state,\n    slots,\n    title,\n    classNames,\n    getBaseCalendarProps\n  };\n}\n\nexport {\n  useRangeCalendar\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
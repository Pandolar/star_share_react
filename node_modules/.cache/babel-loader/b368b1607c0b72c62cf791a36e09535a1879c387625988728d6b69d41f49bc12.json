{"ast":null,"code":"var Bt = Object.defineProperty,\n  At = Object.defineProperties;\nvar kt = Object.getOwnPropertyDescriptors;\nvar Y = Object.getOwnPropertySymbols;\nvar gt = Object.prototype.hasOwnProperty,\n  Et = Object.prototype.propertyIsEnumerable;\nvar vt = (r, s, e) => s in r ? Bt(r, s, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: e\n  }) : r[s] = e,\n  St = (r, s) => {\n    for (var e in s || (s = {})) gt.call(s, e) && vt(r, e, s[e]);\n    if (Y) for (var e of Y(s)) Et.call(s, e) && vt(r, e, s[e]);\n    return r;\n  },\n  bt = (r, s) => At(r, kt(s));\nvar Pt = (r, s) => {\n  var e = {};\n  for (var u in r) gt.call(r, u) && s.indexOf(u) < 0 && (e[u] = r[u]);\n  if (r != null && Y) for (var u of Y(r)) s.indexOf(u) < 0 && Et.call(r, u) && (e[u] = r[u]);\n  return e;\n};\nimport * as n from \"react\";\nfunction ht(r) {\n  let s = setTimeout(r, 0),\n    e = setTimeout(r, 10),\n    u = setTimeout(r, 50);\n  return [s, e, u];\n}\nimport * as U from \"react\";\nfunction _t(r) {\n  let s = U.useRef();\n  return U.useEffect(() => {\n    s.current = r;\n  }), s.current;\n}\nimport * as S from \"react\";\nvar Ot = 18,\n  wt = 40,\n  Gt = `${wt}px`,\n  xt = [\"[data-lastpass-icon-root]\", \"com-1password-button\", \"[data-dashlanecreated]\", '[style$=\"2147483647 !important;\"]'].join(\",\");\nfunction Tt(_ref) {\n  let {\n    containerRef: r,\n    inputRef: s,\n    pushPasswordManagerStrategy: e,\n    isFocused: u\n  } = _ref;\n  let [P, D] = S.useState(!1),\n    [G, H] = S.useState(!1),\n    [F, W] = S.useState(!1),\n    Z = S.useMemo(() => e === \"none\" ? !1 : (e === \"increase-width\" || e === \"experimental-no-flickering\") && P && G, [P, G, e]),\n    T = S.useCallback(() => {\n      let f = r.current,\n        h = s.current;\n      if (!f || !h || F || e === \"none\") return;\n      let a = f,\n        B = a.getBoundingClientRect().left + a.offsetWidth,\n        A = a.getBoundingClientRect().top + a.offsetHeight / 2,\n        z = B - Ot,\n        q = A;\n      document.querySelectorAll(xt).length === 0 && document.elementFromPoint(z, q) === f || (D(!0), W(!0));\n    }, [r, s, F, e]);\n  return S.useEffect(() => {\n    let f = r.current;\n    if (!f || e === \"none\") return;\n    function h() {\n      let A = window.innerWidth - f.getBoundingClientRect().right;\n      H(A >= wt);\n    }\n    h();\n    let a = setInterval(h, 1e3);\n    return () => {\n      clearInterval(a);\n    };\n  }, [r, e]), S.useEffect(() => {\n    let f = u || document.activeElement === s.current;\n    if (e === \"none\" || !f) return;\n    let h = setTimeout(T, 0),\n      a = setTimeout(T, 2e3),\n      B = setTimeout(T, 5e3),\n      A = setTimeout(() => {\n        W(!0);\n      }, 6e3);\n    return () => {\n      clearTimeout(h), clearTimeout(a), clearTimeout(B), clearTimeout(A);\n    };\n  }, [s, u, e, T]), {\n    hasPWMBadge: P,\n    willPushPWMBadge: Z,\n    PWM_BADGE_SPACE_WIDTH: Gt\n  };\n}\nvar jt = n.createContext({}),\n  Lt = n.forwardRef((A, B) => {\n    var z = A,\n      {\n        value: r,\n        onChange: s,\n        maxLength: e,\n        textAlign: u = \"left\",\n        pattern: P,\n        placeholder: D,\n        inputMode: G = \"numeric\",\n        onComplete: H,\n        pushPasswordManagerStrategy: F = \"increase-width\",\n        pasteTransformer: W,\n        containerClassName: Z,\n        noScriptCSSFallback: T = Nt,\n        render: f,\n        children: h\n      } = z,\n      a = Pt(z, [\"value\", \"onChange\", \"maxLength\", \"textAlign\", \"pattern\", \"placeholder\", \"inputMode\", \"onComplete\", \"pushPasswordManagerStrategy\", \"pasteTransformer\", \"containerClassName\", \"noScriptCSSFallback\", \"render\", \"children\"]);\n    var X, lt, ut, dt, ft;\n    let [q, nt] = n.useState(typeof a.defaultValue == \"string\" ? a.defaultValue : \"\"),\n      i = r != null ? r : q,\n      I = _t(i),\n      x = n.useCallback(t => {\n        s == null || s(t), nt(t);\n      }, [s]),\n      m = n.useMemo(() => P ? typeof P == \"string\" ? new RegExp(P) : P : null, [P]),\n      l = n.useRef(null),\n      K = n.useRef(null),\n      J = n.useRef({\n        value: i,\n        onChange: x,\n        isIOS: typeof window != \"undefined\" && ((lt = (X = window == null ? void 0 : window.CSS) == null ? void 0 : X.supports) == null ? void 0 : lt.call(X, \"-webkit-touch-callout\", \"none\"))\n      }),\n      V = n.useRef({\n        prev: [(ut = l.current) == null ? void 0 : ut.selectionStart, (dt = l.current) == null ? void 0 : dt.selectionEnd, (ft = l.current) == null ? void 0 : ft.selectionDirection]\n      });\n    n.useImperativeHandle(B, () => l.current, []), n.useEffect(() => {\n      let t = l.current,\n        o = K.current;\n      if (!t || !o) return;\n      J.current.value !== t.value && J.current.onChange(t.value), V.current.prev = [t.selectionStart, t.selectionEnd, t.selectionDirection];\n      function d() {\n        if (document.activeElement !== t) {\n          L(null), N(null);\n          return;\n        }\n        let c = t.selectionStart,\n          b = t.selectionEnd,\n          mt = t.selectionDirection,\n          v = t.maxLength,\n          C = t.value,\n          _ = V.current.prev,\n          g = -1,\n          E = -1,\n          w;\n        if (C.length !== 0 && c !== null && b !== null) {\n          let Dt = c === b,\n            Ht = c === C.length && C.length < v;\n          if (Dt && !Ht) {\n            let y = c;\n            if (y === 0) g = 0, E = 1, w = \"forward\";else if (y === v) g = y - 1, E = y, w = \"backward\";else if (v > 1 && C.length > 1) {\n              let et = 0;\n              if (_[0] !== null && _[1] !== null) {\n                w = y < _[1] ? \"backward\" : \"forward\";\n                let Wt = _[0] === _[1] && _[0] < v;\n                w === \"backward\" && !Wt && (et = -1);\n              }\n              g = et + y, E = et + y + 1;\n            }\n          }\n          g !== -1 && E !== -1 && g !== E && l.current.setSelectionRange(g, E, w);\n        }\n        let pt = g !== -1 ? g : c,\n          Rt = E !== -1 ? E : b,\n          yt = w != null ? w : mt;\n        L(pt), N(Rt), V.current.prev = [pt, Rt, yt];\n      }\n      if (document.addEventListener(\"selectionchange\", d, {\n        capture: !0\n      }), d(), document.activeElement === t && Q(!0), !document.getElementById(\"input-otp-style\")) {\n        let c = document.createElement(\"style\");\n        if (c.id = \"input-otp-style\", document.head.appendChild(c), c.sheet) {\n          let b = \"background: transparent !important; color: transparent !important; border-color: transparent !important; opacity: 0 !important; box-shadow: none !important; -webkit-box-shadow: none !important; -webkit-text-fill-color: transparent !important;\";\n          $(c.sheet, \"[data-input-otp]::selection { background: transparent !important; color: transparent !important; }\"), $(c.sheet, `[data-input-otp]:autofill { ${b} }`), $(c.sheet, `[data-input-otp]:-webkit-autofill { ${b} }`), $(c.sheet, \"@supports (-webkit-touch-callout: none) { [data-input-otp] { letter-spacing: -.6em !important; font-weight: 100 !important; font-stretch: ultra-condensed; font-optical-sizing: none !important; left: -1px !important; right: 1px !important; } }\"), $(c.sheet, \"[data-input-otp] + * { pointer-events: all !important; }\");\n        }\n      }\n      let p = () => {\n        o && o.style.setProperty(\"--root-height\", `${t.clientHeight}px`);\n      };\n      p();\n      let R = new ResizeObserver(p);\n      return R.observe(t), () => {\n        document.removeEventListener(\"selectionchange\", d, {\n          capture: !0\n        }), R.disconnect();\n      };\n    }, []);\n    let [ot, rt] = n.useState(!1),\n      [j, Q] = n.useState(!1),\n      [M, L] = n.useState(null),\n      [k, N] = n.useState(null);\n    n.useEffect(() => {\n      ht(() => {\n        var p, R, c, b;\n        (p = l.current) == null || p.dispatchEvent(new Event(\"input\"));\n        let t = (R = l.current) == null ? void 0 : R.selectionStart,\n          o = (c = l.current) == null ? void 0 : c.selectionEnd,\n          d = (b = l.current) == null ? void 0 : b.selectionDirection;\n        t !== null && o !== null && (L(t), N(o), V.current.prev = [t, o, d]);\n      });\n    }, [i, j]), n.useEffect(() => {\n      I !== void 0 && i !== I && I.length < e && i.length === e && (H == null || H(i));\n    }, [e, H, I, i]);\n    let O = Tt({\n        containerRef: K,\n        inputRef: l,\n        pushPasswordManagerStrategy: F,\n        isFocused: j\n      }),\n      st = n.useCallback(t => {\n        let o = t.currentTarget.value.slice(0, e);\n        if (o.length > 0 && m && !m.test(o)) {\n          t.preventDefault();\n          return;\n        }\n        typeof I == \"string\" && o.length < I.length && document.dispatchEvent(new Event(\"selectionchange\")), x(o);\n      }, [e, x, I, m]),\n      at = n.useCallback(() => {\n        var t;\n        if (l.current) {\n          let o = Math.min(l.current.value.length, e - 1),\n            d = l.current.value.length;\n          (t = l.current) == null || t.setSelectionRange(o, d), L(o), N(d);\n        }\n        Q(!0);\n      }, [e]),\n      ct = n.useCallback(t => {\n        var g, E;\n        let o = l.current;\n        if (!W && (!J.current.isIOS || !t.clipboardData || !o)) return;\n        let d = t.clipboardData.getData(\"text/plain\"),\n          p = W ? W(d) : d;\n        console.log({\n          _content: d,\n          content: p\n        }), t.preventDefault();\n        let R = (g = l.current) == null ? void 0 : g.selectionStart,\n          c = (E = l.current) == null ? void 0 : E.selectionEnd,\n          v = (R !== c ? i.slice(0, R) + p + i.slice(c) : i.slice(0, R) + p + i.slice(R)).slice(0, e);\n        if (v.length > 0 && m && !m.test(v)) return;\n        o.value = v, x(v);\n        let C = Math.min(v.length, e - 1),\n          _ = v.length;\n        o.setSelectionRange(C, _), L(C), N(_);\n      }, [e, x, m, i]),\n      It = n.useMemo(() => ({\n        position: \"relative\",\n        cursor: a.disabled ? \"default\" : \"text\",\n        userSelect: \"none\",\n        WebkitUserSelect: \"none\",\n        pointerEvents: \"none\"\n      }), [a.disabled]),\n      it = n.useMemo(() => ({\n        position: \"absolute\",\n        inset: 0,\n        width: O.willPushPWMBadge ? `calc(100% + ${O.PWM_BADGE_SPACE_WIDTH})` : \"100%\",\n        clipPath: O.willPushPWMBadge ? `inset(0 ${O.PWM_BADGE_SPACE_WIDTH} 0 0)` : void 0,\n        height: \"100%\",\n        display: \"flex\",\n        textAlign: u,\n        opacity: \"1\",\n        color: \"transparent\",\n        pointerEvents: \"all\",\n        background: \"transparent\",\n        caretColor: \"transparent\",\n        border: \"0 solid transparent\",\n        outline: \"0 solid transparent\",\n        boxShadow: \"none\",\n        lineHeight: \"1\",\n        letterSpacing: \"-.5em\",\n        fontSize: \"var(--root-height)\",\n        fontFamily: \"monospace\",\n        fontVariantNumeric: \"tabular-nums\"\n      }), [O.PWM_BADGE_SPACE_WIDTH, O.willPushPWMBadge, u]),\n      Mt = n.useMemo(() => n.createElement(\"input\", bt(St({\n        autoComplete: a.autoComplete || \"one-time-code\"\n      }, a), {\n        \"data-input-otp\": !0,\n        \"data-input-otp-placeholder-shown\": i.length === 0 || void 0,\n        \"data-input-otp-mss\": M,\n        \"data-input-otp-mse\": k,\n        inputMode: G,\n        pattern: m == null ? void 0 : m.source,\n        \"aria-placeholder\": D,\n        style: it,\n        maxLength: e,\n        value: i,\n        ref: l,\n        onPaste: t => {\n          var o;\n          ct(t), (o = a.onPaste) == null || o.call(a, t);\n        },\n        onChange: st,\n        onMouseOver: t => {\n          var o;\n          rt(!0), (o = a.onMouseOver) == null || o.call(a, t);\n        },\n        onMouseLeave: t => {\n          var o;\n          rt(!1), (o = a.onMouseLeave) == null || o.call(a, t);\n        },\n        onFocus: t => {\n          var o;\n          at(), (o = a.onFocus) == null || o.call(a, t);\n        },\n        onBlur: t => {\n          var o;\n          Q(!1), (o = a.onBlur) == null || o.call(a, t);\n        }\n      })), [st, at, ct, G, it, e, k, M, a, m == null ? void 0 : m.source, i]),\n      tt = n.useMemo(() => ({\n        slots: Array.from({\n          length: e\n        }).map((t, o) => {\n          var c;\n          let d = j && M !== null && k !== null && (M === k && o === M || o >= M && o < k),\n            p = i[o] !== void 0 ? i[o] : null,\n            R = i[0] !== void 0 ? null : (c = D == null ? void 0 : D[o]) != null ? c : null;\n          return {\n            char: p,\n            placeholderChar: R,\n            isActive: d,\n            hasFakeCaret: d && p === null\n          };\n        }),\n        isFocused: j,\n        isHovering: !a.disabled && ot\n      }), [j, ot, e, k, M, a.disabled, i]),\n      Ct = n.useMemo(() => f ? f(tt) : n.createElement(jt.Provider, {\n        value: tt\n      }, h), [h, tt, f]);\n    return n.createElement(n.Fragment, null, T !== null && n.createElement(\"noscript\", null, n.createElement(\"style\", null, T)), n.createElement(\"div\", {\n      ref: K,\n      \"data-input-otp-container\": !0,\n      style: It,\n      className: Z\n    }, Ct, n.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        inset: 0,\n        pointerEvents: \"none\"\n      }\n    }, Mt)));\n  });\nLt.displayName = \"Input\";\nfunction $(r, s) {\n  try {\n    r.insertRule(s);\n  } catch (e) {\n    console.error(\"input-otp could not insert CSS rule:\", s);\n  }\n}\nvar Nt = `\n[data-input-otp] {\n  --nojs-bg: white !important;\n  --nojs-fg: black !important;\n\n  background-color: var(--nojs-bg) !important;\n  color: var(--nojs-fg) !important;\n  caret-color: var(--nojs-fg) !important;\n  letter-spacing: .25em !important;\n  text-align: center !important;\n  border: 1px solid var(--nojs-fg) !important;\n  border-radius: 4px !important;\n  width: 100% !important;\n}\n@media (prefers-color-scheme: dark) {\n  [data-input-otp] {\n    --nojs-bg: black !important;\n    --nojs-fg: white !important;\n  }\n}`;\nvar Kt = \"^\\\\d+$\",\n  Jt = \"^[a-zA-Z]+$\",\n  Qt = \"^[a-zA-Z0-9]+$\";\nexport { Lt as OTPInput, jt as OTPInputContext, Jt as REGEXP_ONLY_CHARS, Kt as REGEXP_ONLY_DIGITS, Qt as REGEXP_ONLY_DIGITS_AND_CHARS };","map":{"version":3,"names":["n","ht","r","s","setTimeout","e","u","U","_t","useRef","useEffect","current","S","Ot","wt","Gt","xt","join","Tt","_ref","containerRef","inputRef","pushPasswordManagerStrategy","isFocused","P","D","useState","G","H","F","W","Z","useMemo","T","useCallback","f","h","a","B","getBoundingClientRect","left","offsetWidth","A","top","offsetHeight","z","q","document","querySelectorAll","length","elementFromPoint","window","innerWidth","right","setInterval","clearInterval","activeElement","clearTimeout","hasPWMBadge","willPushPWMBadge","PWM_BADGE_SPACE_WIDTH","jt","createContext","Lt","forwardRef","value","onChange","maxLength","textAlign","pattern","placeholder","inputMode","onComplete","pasteTransformer","containerClassName","noScriptCSSFallback","Nt","render","children","Pt","X","lt","ut","dt","ft","nt","defaultValue","i","I","x","t","m","RegExp","l","K","J","isIOS","CSS","supports","call","V","prev","selectionStart","selectionEnd","selectionDirection","useImperativeHandle","o","d","L","N","c","b","mt","v","C","_","g","E","w","Dt","Ht","y","et","Wt","setSelectionRange","pt","Rt","yt","addEventListener","capture","Q","getElementById","createElement","id","head","appendChild","sheet","$","p","updateRootHeight","style","setProperty","clientHeight","R","ResizeObserver","observe","removeEventListener","disconnect","ot","rt","j","M","k","dispatchEvent","Event","O","st","currentTarget","slice","test","preventDefault","at","Math","min","ct","clipboardData","getData","console","log","_content","content","It","position","cursor","disabled","userSelect","WebkitUserSelect","pointerEvents","it","inset","width","clipPath","height","display","opacity","color","background","caretColor","border","outline","boxShadow","lineHeight","letterSpacing","fontSize","fontFamily","fontVariantNumeric","Mt","bt","St","autoComplete","source","ref","onPaste","onMouseOver","onMouseLeave","onFocus","onBlur","tt","slots","Array","from","map","char","placeholderChar","isActive","hasFakeCaret","isHovering","Ct","Provider","Fragment","className","displayName","insertRule","error","Kt","Jt","Qt","OTPInput","OTPInputContext","REGEXP_ONLY_CHARS","REGEXP_ONLY_DIGITS","REGEXP_ONLY_DIGITS_AND_CHARS"],"sources":["/opt/dev/star_share/web/node_modules/.pnpm/input-otp@1.4.1_react-dom@19.1.0_react@19.1.0/node_modules/input-otp/src/input.tsx","/opt/dev/star_share/web/node_modules/.pnpm/input-otp@1.4.1_react-dom@19.1.0_react@19.1.0/node_modules/input-otp/src/sync-timeouts.ts","/opt/dev/star_share/web/node_modules/.pnpm/input-otp@1.4.1_react-dom@19.1.0_react@19.1.0/node_modules/input-otp/src/use-previous.ts","/opt/dev/star_share/web/node_modules/.pnpm/input-otp@1.4.1_react-dom@19.1.0_react@19.1.0/node_modules/input-otp/src/use-pwm-badge.tsx","/opt/dev/star_share/web/node_modules/.pnpm/input-otp@1.4.1_react-dom@19.1.0_react@19.1.0/node_modules/input-otp/src/regexp.ts"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\n\nimport { syncTimeouts } from './sync-timeouts'\nimport { OTPInputProps, RenderProps } from './types'\nimport { usePrevious } from './use-previous'\nimport { usePasswordManagerBadge } from './use-pwm-badge'\n\nexport const OTPInputContext = React.createContext<RenderProps>(\n  {} as RenderProps,\n)\n\nexport const OTPInput = React.forwardRef<HTMLInputElement, OTPInputProps>(\n  (\n    {\n      value: uncheckedValue,\n      onChange: uncheckedOnChange,\n      maxLength,\n      textAlign = 'left',\n      pattern,\n      placeholder,\n      inputMode = 'numeric',\n      onComplete,\n      pushPasswordManagerStrategy = 'increase-width',\n      pasteTransformer,\n      containerClassName,\n      noScriptCSSFallback = NOSCRIPT_CSS_FALLBACK,\n\n      render,\n      children,\n\n      ...props\n    },\n    ref,\n  ) => {\n    // Only used when `value` state is not provided\n    const [internalValue, setInternalValue] = React.useState(\n      typeof props.defaultValue === 'string' ? props.defaultValue : '',\n    )\n\n    // Definitions\n    const value = uncheckedValue ?? internalValue\n    const previousValue = usePrevious(value)\n    const onChange = React.useCallback(\n      (newValue: string) => {\n        uncheckedOnChange?.(newValue)\n        setInternalValue(newValue)\n      },\n      [uncheckedOnChange],\n    )\n    const regexp = React.useMemo(\n      () =>\n        pattern\n          ? typeof pattern === 'string'\n            ? new RegExp(pattern)\n            : pattern\n          : null,\n      [pattern],\n    )\n\n    /** useRef */\n    const inputRef = React.useRef<HTMLInputElement>(null)\n    const containerRef = React.useRef<HTMLDivElement>(null)\n    const initialLoadRef = React.useRef({\n      value,\n      onChange,\n      isIOS:\n        typeof window !== 'undefined' &&\n        window?.CSS?.supports?.('-webkit-touch-callout', 'none'),\n    })\n    const inputMetadataRef = React.useRef<{\n      prev: [number | null, number | null, 'none' | 'forward' | 'backward']\n    }>({\n      prev: [\n        inputRef.current?.selectionStart,\n        inputRef.current?.selectionEnd,\n        inputRef.current?.selectionDirection,\n      ],\n    })\n    React.useImperativeHandle(ref, () => inputRef.current, [])\n    React.useEffect(() => {\n      const input = inputRef.current\n      const container = containerRef.current\n\n      if (!input || !container) {\n        return\n      }\n\n      // Sync input value\n      if (initialLoadRef.current.value !== input.value) {\n        initialLoadRef.current.onChange(input.value)\n      }\n\n      // Previous selection\n      inputMetadataRef.current.prev = [\n        input.selectionStart,\n        input.selectionEnd,\n        input.selectionDirection,\n      ]\n      function onDocumentSelectionChange() {\n        if (document.activeElement !== input) {\n          setMirrorSelectionStart(null)\n          setMirrorSelectionEnd(null)\n          return\n        }\n\n        // Aliases\n        const _s = input.selectionStart\n        const _e = input.selectionEnd\n        const _dir = input.selectionDirection\n        const _ml = input.maxLength\n        const _val = input.value\n        const _prev = inputMetadataRef.current.prev\n\n        // Algorithm\n        let start = -1\n        let end = -1\n        let direction: 'forward' | 'backward' | 'none' = undefined\n        if (_val.length !== 0 && _s !== null && _e !== null) {\n          const isSingleCaret = _s === _e\n          const isInsertMode = _s === _val.length && _val.length < _ml\n\n          if (isSingleCaret && !isInsertMode) {\n            const c = _s\n            if (c === 0) {\n              start = 0\n              end = 1\n              direction = 'forward'\n            } else if (c === _ml) {\n              start = c - 1\n              end = c\n              direction = 'backward'\n            } else if (_ml > 1 && _val.length > 1) {\n              let offset = 0\n              if (_prev[0] !== null && _prev[1] !== null) {\n                direction = c < _prev[1] ? 'backward' : 'forward'\n                const wasPreviouslyInserting =\n                  _prev[0] === _prev[1] && _prev[0] < _ml\n                if (direction === 'backward' && !wasPreviouslyInserting) {\n                  offset = -1\n                }\n              }\n\n              start = offset + c\n              end = offset + c + 1\n            }\n          }\n\n          if (start !== -1 && end !== -1 && start !== end) {\n            inputRef.current.setSelectionRange(start, end, direction)\n          }\n        }\n\n        // Finally, update the state\n        const s = start !== -1 ? start : _s\n        const e = end !== -1 ? end : _e\n        const dir = direction ?? _dir\n        setMirrorSelectionStart(s)\n        setMirrorSelectionEnd(e)\n        // Store the previous selection value\n        inputMetadataRef.current.prev = [s, e, dir]\n      }\n      document.addEventListener('selectionchange', onDocumentSelectionChange, {\n        capture: true,\n      })\n\n      // Set initial mirror state\n      onDocumentSelectionChange()\n      document.activeElement === input && setIsFocused(true)\n\n      // Apply needed styles\n      if (!document.getElementById('input-otp-style')) {\n        const styleEl = document.createElement('style')\n        styleEl.id = 'input-otp-style'\n        document.head.appendChild(styleEl)\n\n        if (styleEl.sheet) {\n          const autofillStyles =\n            'background: transparent !important; color: transparent !important; border-color: transparent !important; opacity: 0 !important; box-shadow: none !important; -webkit-box-shadow: none !important; -webkit-text-fill-color: transparent !important;'\n\n          safeInsertRule(\n            styleEl.sheet,\n            '[data-input-otp]::selection { background: transparent !important; color: transparent !important; }',\n          )\n          safeInsertRule(\n            styleEl.sheet,\n            `[data-input-otp]:autofill { ${autofillStyles} }`,\n          )\n          safeInsertRule(\n            styleEl.sheet,\n            `[data-input-otp]:-webkit-autofill { ${autofillStyles} }`,\n          )\n          // iOS\n          safeInsertRule(\n            styleEl.sheet,\n            `@supports (-webkit-touch-callout: none) { [data-input-otp] { letter-spacing: -.6em !important; font-weight: 100 !important; font-stretch: ultra-condensed; font-optical-sizing: none !important; left: -1px !important; right: 1px !important; } }`,\n          )\n          // PWM badges\n          safeInsertRule(\n            styleEl.sheet,\n            `[data-input-otp] + * { pointer-events: all !important; }`,\n          )\n        }\n      }\n      // Track root height\n      const updateRootHeight = () => {\n        if (container) {\n          container.style.setProperty(\n            '--root-height',\n            `${input.clientHeight}px`,\n          )\n        }\n      }\n      updateRootHeight()\n      const resizeObserver = new ResizeObserver(updateRootHeight)\n      resizeObserver.observe(input)\n\n      return () => {\n        document.removeEventListener(\n          'selectionchange',\n          onDocumentSelectionChange,\n          { capture: true },\n        )\n        resizeObserver.disconnect()\n      }\n    }, [])\n\n    /** Mirrors for UI rendering purpose only */\n    const [isHoveringInput, setIsHoveringInput] = React.useState(false)\n    const [isFocused, setIsFocused] = React.useState(false)\n    const [mirrorSelectionStart, setMirrorSelectionStart] = React.useState<\n      number | null\n    >(null)\n    const [mirrorSelectionEnd, setMirrorSelectionEnd] = React.useState<\n      number | null\n    >(null)\n\n    /** Effects */\n    React.useEffect(() => {\n      syncTimeouts(() => {\n        // Forcefully remove :autofill state\n        inputRef.current?.dispatchEvent(new Event('input'))\n\n        // Update the selection state\n        const s = inputRef.current?.selectionStart\n        const e = inputRef.current?.selectionEnd\n        const dir = inputRef.current?.selectionDirection\n        if (s !== null && e !== null) {\n          setMirrorSelectionStart(s)\n          setMirrorSelectionEnd(e)\n          inputMetadataRef.current.prev = [s, e, dir]\n        }\n      })\n    }, [value, isFocused])\n\n    React.useEffect(() => {\n      if (previousValue === undefined) {\n        return\n      }\n\n      if (\n        value !== previousValue &&\n        previousValue.length < maxLength &&\n        value.length === maxLength\n      ) {\n        onComplete?.(value)\n      }\n    }, [maxLength, onComplete, previousValue, value])\n\n    const pwmb = usePasswordManagerBadge({\n      containerRef,\n      inputRef,\n      pushPasswordManagerStrategy,\n      isFocused,\n    })\n\n    /** Event handlers */\n    const _changeListener = React.useCallback(\n      (e: React.ChangeEvent<HTMLInputElement>) => {\n        const newValue = e.currentTarget.value.slice(0, maxLength)\n        if (newValue.length > 0 && regexp && !regexp.test(newValue)) {\n          e.preventDefault()\n          return\n        }\n        const maybeHasDeleted =\n          typeof previousValue === 'string' &&\n          newValue.length < previousValue.length\n        if (maybeHasDeleted) {\n          // Since cutting/deleting text doesn't trigger\n          // selectionchange event, we'll have to dispatch it manually.\n          // NOTE: The following line also triggers when cmd+A then pasting\n          // a value with smaller length, which is not ideal for performance.\n          document.dispatchEvent(new Event('selectionchange'))\n        }\n        onChange(newValue)\n      },\n      [maxLength, onChange, previousValue, regexp],\n    )\n    const _focusListener = React.useCallback(() => {\n      if (inputRef.current) {\n        const start = Math.min(inputRef.current.value.length, maxLength - 1)\n        const end = inputRef.current.value.length\n        inputRef.current?.setSelectionRange(start, end)\n        setMirrorSelectionStart(start)\n        setMirrorSelectionEnd(end)\n      }\n      setIsFocused(true)\n    }, [maxLength])\n    // Fix iOS pasting\n    const _pasteListener = React.useCallback(\n      (e: React.ClipboardEvent<HTMLInputElement>) => {\n        const input = inputRef.current\n        if (!pasteTransformer && (!initialLoadRef.current.isIOS || !e.clipboardData || !input)) {\n          return\n        }\n        \n        const _content = e.clipboardData.getData('text/plain')\n        const content = pasteTransformer\n          ? pasteTransformer(_content)\n          : _content\n        console.log({_content,content})\n        e.preventDefault()\n\n        const start = inputRef.current?.selectionStart\n        const end = inputRef.current?.selectionEnd\n\n        const isReplacing = start !== end\n\n        const newValueUncapped = isReplacing\n          ? value.slice(0, start) + content + value.slice(end) // Replacing\n          : value.slice(0, start) + content + value.slice(start) // Inserting\n        const newValue = newValueUncapped.slice(0, maxLength)\n\n        if (newValue.length > 0 && regexp && !regexp.test(newValue)) {\n          return\n        }\n\n        input.value = newValue\n        onChange(newValue)\n\n        const _start = Math.min(newValue.length, maxLength - 1)\n        const _end = newValue.length\n\n        input.setSelectionRange(_start, _end)\n        setMirrorSelectionStart(_start)\n        setMirrorSelectionEnd(_end)\n      },\n      [maxLength, onChange, regexp, value],\n    )\n\n    /** Styles */\n    const rootStyle = React.useMemo<React.CSSProperties>(\n      () => ({\n        position: 'relative',\n        cursor: props.disabled ? 'default' : 'text',\n        userSelect: 'none',\n        WebkitUserSelect: 'none',\n        pointerEvents: 'none',\n      }),\n      [props.disabled],\n    )\n\n    const inputStyle = React.useMemo<React.CSSProperties>(\n      () => ({\n        position: 'absolute',\n        inset: 0,\n        width: pwmb.willPushPWMBadge\n          ? `calc(100% + ${pwmb.PWM_BADGE_SPACE_WIDTH})`\n          : '100%',\n        clipPath: pwmb.willPushPWMBadge\n          ? `inset(0 ${pwmb.PWM_BADGE_SPACE_WIDTH} 0 0)`\n          : undefined,\n        height: '100%',\n        display: 'flex',\n        textAlign,\n        opacity: '1', // Mandatory for iOS hold-paste\n        color: 'transparent',\n        pointerEvents: 'all',\n        background: 'transparent',\n        caretColor: 'transparent',\n        border: '0 solid transparent',\n        outline: '0 solid transparent',\n        boxShadow: 'none',\n        lineHeight: '1',\n        letterSpacing: '-.5em',\n        fontSize: 'var(--root-height)',\n        fontFamily: 'monospace',\n        fontVariantNumeric: 'tabular-nums',\n        // letterSpacing: '-1em',\n        // transform: 'scale(1.5)',\n        // paddingRight: '100%',\n        // paddingBottom: '100%',\n        // debugging purposes\n        // inset: undefined,\n        // position: undefined,\n        // color: 'black',\n        // background: 'white',\n        // opacity: '1',\n        // caretColor: 'black',\n        // padding: '0',\n        // letterSpacing: 'unset',\n        // fontSize: 'unset',\n        // paddingInline: '.5rem',\n      }),\n      [pwmb.PWM_BADGE_SPACE_WIDTH, pwmb.willPushPWMBadge, textAlign],\n    )\n\n    /** Rendering */\n    const renderedInput = React.useMemo(\n      () => (\n        <input\n          autoComplete={props.autoComplete || 'one-time-code'}\n          {...props}\n          data-input-otp\n          data-input-otp-placeholder-shown={value.length === 0 || undefined}\n          data-input-otp-mss={mirrorSelectionStart}\n          data-input-otp-mse={mirrorSelectionEnd}\n          inputMode={inputMode}\n          pattern={regexp?.source}\n          aria-placeholder={placeholder}\n          style={inputStyle}\n          maxLength={maxLength}\n          value={value}\n          ref={inputRef}\n          onPaste={e => {\n            _pasteListener(e)\n            props.onPaste?.(e)\n          }}\n          onChange={_changeListener}\n          onMouseOver={e => {\n            setIsHoveringInput(true)\n            props.onMouseOver?.(e)\n          }}\n          onMouseLeave={e => {\n            setIsHoveringInput(false)\n            props.onMouseLeave?.(e)\n          }}\n          onFocus={e => {\n            _focusListener()\n            props.onFocus?.(e)\n          }}\n          onBlur={e => {\n            setIsFocused(false)\n            props.onBlur?.(e)\n          }}\n        />\n      ),\n      [\n        _changeListener,\n        _focusListener,\n        _pasteListener,\n        inputMode,\n        inputStyle,\n        maxLength,\n        mirrorSelectionEnd,\n        mirrorSelectionStart,\n        props,\n        regexp?.source,\n        value,\n      ],\n    )\n\n    const contextValue = React.useMemo<RenderProps>(() => {\n      return {\n        slots: Array.from({ length: maxLength }).map((_, slotIdx) => {\n          const isActive =\n            isFocused &&\n            mirrorSelectionStart !== null &&\n            mirrorSelectionEnd !== null &&\n            ((mirrorSelectionStart === mirrorSelectionEnd &&\n              slotIdx === mirrorSelectionStart) ||\n              (slotIdx >= mirrorSelectionStart && slotIdx < mirrorSelectionEnd))\n\n          const char = value[slotIdx] !== undefined ? value[slotIdx] : null\n          const placeholderChar = value[0] !== undefined ? null : placeholder?.[slotIdx] ?? null\n\n          return {\n            char,\n            placeholderChar,\n            isActive,\n            hasFakeCaret: isActive && char === null,\n          }\n        }),\n        isFocused,\n        isHovering: !props.disabled && isHoveringInput,\n      }\n    }, [\n      isFocused,\n      isHoveringInput,\n      maxLength,\n      mirrorSelectionEnd,\n      mirrorSelectionStart,\n      props.disabled,\n      value,\n    ])\n\n    const renderedChildren = React.useMemo(() => {\n      if (render) {\n        return render(contextValue)\n      }\n      return (\n        <OTPInputContext.Provider value={contextValue}>\n          {children}\n        </OTPInputContext.Provider>\n      )\n    }, [children, contextValue, render])\n\n    return (\n      <>\n        {noScriptCSSFallback !== null && (\n          <noscript>\n            <style>{noScriptCSSFallback}</style>\n          </noscript>\n        )}\n\n        <div\n          ref={containerRef}\n          data-input-otp-container\n          style={rootStyle}\n          className={containerClassName}\n        >\n          {renderedChildren}\n\n          <div\n            style={{\n              position: 'absolute',\n              inset: 0,\n              pointerEvents: 'none',\n            }}\n          >\n            {renderedInput}\n          </div>\n        </div>\n      </>\n    )\n  },\n)\nOTPInput.displayName = 'Input'\n\nfunction safeInsertRule(sheet: CSSStyleSheet, rule: string) {\n  try {\n    sheet.insertRule(rule)\n  } catch {\n    console.error('input-otp could not insert CSS rule:', rule)\n  }\n}\n\n// Decided to go with <noscript>\n// instead of `scripting` CSS media query\n// because it's a fallback for initial page load\n// and the <script> tag won't be loaded\n// unless the user has JS disabled.\nconst NOSCRIPT_CSS_FALLBACK = `\n[data-input-otp] {\n  --nojs-bg: white !important;\n  --nojs-fg: black !important;\n\n  background-color: var(--nojs-bg) !important;\n  color: var(--nojs-fg) !important;\n  caret-color: var(--nojs-fg) !important;\n  letter-spacing: .25em !important;\n  text-align: center !important;\n  border: 1px solid var(--nojs-fg) !important;\n  border-radius: 4px !important;\n  width: 100% !important;\n}\n@media (prefers-color-scheme: dark) {\n  [data-input-otp] {\n    --nojs-bg: black !important;\n    --nojs-fg: white !important;\n  }\n}`\n","export function syncTimeouts(cb: (...args: any[]) => unknown): number[] {\n  const t1 = setTimeout(cb, 0) // For faster machines\n  const t2 = setTimeout(cb, 1_0)\n  const t3 = setTimeout(cb, 5_0)\n  return [t1, t2, t3]\n}\n","import * as React from 'react'\n\nexport function usePrevious<T>(value: T) {\n  const ref = React.useRef<T>()\n  React.useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n","import * as React from 'react'\nimport { OTPInputProps } from './types'\n\nconst PWM_BADGE_MARGIN_RIGHT = 18\nconst PWM_BADGE_SPACE_WIDTH_PX = 40\nconst PWM_BADGE_SPACE_WIDTH = `${PWM_BADGE_SPACE_WIDTH_PX}px` as const\n\nconst PASSWORD_MANAGERS_SELECTORS = [\n  '[data-lastpass-icon-root]', // LastPass\n  'com-1password-button', // 1Password\n  '[data-dashlanecreated]', // Dashlane\n  '[style$=\"2147483647 !important;\"]', // Bitwarden\n].join(',')\n\nexport function usePasswordManagerBadge({\n  containerRef,\n  inputRef,\n  pushPasswordManagerStrategy,\n  isFocused,\n}: {\n  containerRef: React.RefObject<HTMLDivElement>\n  inputRef: React.RefObject<HTMLInputElement>\n  pushPasswordManagerStrategy: OTPInputProps['pushPasswordManagerStrategy']\n  isFocused: boolean\n}) {\n  /** Password managers have a badge\n   *  and I'll use this state to push them\n   *  outside the input */\n  const [hasPWMBadge, setHasPWMBadge] = React.useState(false)\n  const [hasPWMBadgeSpace, setHasPWMBadgeSpace] = React.useState(false)\n  const [done, setDone] = React.useState(false)\n\n  const willPushPWMBadge = React.useMemo(() => {\n    if (pushPasswordManagerStrategy === 'none') {\n      return false\n    }\n\n    const increaseWidthCase =\n      (pushPasswordManagerStrategy === 'increase-width' ||\n        // TODO: remove 'experimental-no-flickering' support in 2.0.0\n        pushPasswordManagerStrategy === 'experimental-no-flickering') &&\n      hasPWMBadge &&\n      hasPWMBadgeSpace\n\n    return increaseWidthCase\n  }, [hasPWMBadge, hasPWMBadgeSpace, pushPasswordManagerStrategy])\n\n  const trackPWMBadge = React.useCallback(() => {\n    const container = containerRef.current\n    const input = inputRef.current\n    if (\n      !container ||\n      !input ||\n      done ||\n      pushPasswordManagerStrategy === 'none'\n    ) {\n      return\n    }\n\n    const elementToCompare = container\n\n    // Get the top right-center point of the container.\n    // That is usually where most password managers place their badge.\n    const rightCornerX =\n      elementToCompare.getBoundingClientRect().left +\n      elementToCompare.offsetWidth\n    const centereredY =\n      elementToCompare.getBoundingClientRect().top +\n      elementToCompare.offsetHeight / 2\n    const x = rightCornerX - PWM_BADGE_MARGIN_RIGHT\n    const y = centereredY\n\n    // Do an extra search to check for famous password managers\n    const pmws = document.querySelectorAll(PASSWORD_MANAGERS_SELECTORS)\n\n    // If no password manager is automatically detect,\n    // we'll try to dispatch document.elementFromPoint\n    // to identify badges\n    if (pmws.length === 0) {\n      const maybeBadgeEl = document.elementFromPoint(x, y)\n\n      // If the found element is the input itself,\n      // then we assume it's not a password manager badge.\n      // We are not sure. Most times that means there isn't a badge.\n      if (maybeBadgeEl === container) {\n        return\n      }\n    }\n\n    setHasPWMBadge(true)\n    setDone(true)\n  }, [containerRef, inputRef, done, pushPasswordManagerStrategy])\n\n  React.useEffect(() => {\n    const container = containerRef.current\n    if (!container || pushPasswordManagerStrategy === 'none') {\n      return\n    }\n\n    // Check if the PWM area is 100% visible\n    function checkHasSpace() {\n      const viewportWidth = window.innerWidth\n      const distanceToRightEdge =\n        viewportWidth - container.getBoundingClientRect().right\n      setHasPWMBadgeSpace(distanceToRightEdge >= PWM_BADGE_SPACE_WIDTH_PX)\n    }\n\n    checkHasSpace()\n    const interval = setInterval(checkHasSpace, 1000)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [containerRef, pushPasswordManagerStrategy])\n\n  React.useEffect(() => {\n    const _isFocused = isFocused || document.activeElement === inputRef.current\n\n    if (pushPasswordManagerStrategy === 'none' || !_isFocused) {\n      return\n    }\n    const t1 = setTimeout(trackPWMBadge, 0)\n    const t2 = setTimeout(trackPWMBadge, 2000)\n    const t3 = setTimeout(trackPWMBadge, 5000)\n    const t4 = setTimeout(() => {\n      setDone(true)\n    }, 6000)\n    return () => {\n      clearTimeout(t1)\n      clearTimeout(t2)\n      clearTimeout(t3)\n      clearTimeout(t4)\n    }\n  }, [inputRef, isFocused, pushPasswordManagerStrategy, trackPWMBadge])\n\n  return { hasPWMBadge, willPushPWMBadge, PWM_BADGE_SPACE_WIDTH }\n}\n","export const REGEXP_ONLY_DIGITS = '^\\\\d+$'\nexport const REGEXP_ONLY_CHARS = '^[a-zA-Z]+$'\nexport const REGEXP_ONLY_DIGITS_AND_CHARS = '^[a-zA-Z0-9]+$'\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}